AWSTemplateFormatVersion: 2010-09-09
Description: |
   CloudFormation Template for Phonebook Application.
  
Parameters:

  MyVPc:
    Description: VPC Id of your existing account
    Type: AWS::EC2::VPC::Id
  
  MyKey:
    Description: Please enter your valid key pair.
    Type: AWS::EC2::KeyPair::KeyName

  MySubnets:
    Description: Choose your subnets.
    Type: List<AWS::EC2::Subnet::Id>


Resources:

  PrjSecGrp:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Enable HTTP and TCP # Required
      GroupName: "String"
      SecurityGroupIngress: 
        - IpProtocol: tcp
          FromPort: 22
          ToPort:  22
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0      
      VpcId: !Ref MyVPc      



  PrjALBSecGrp:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Enables HTTP connection # Required
      GroupName: "String"
      SecurityGroupIngress: 
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
      VpcId: !Ref MyVPc    
   

  PrjLT:
    Type: AWS::EC2::LaunchTemplate
    Properties:
      LaunchTemplateData:
        ImageId: ami-067d1e60475437da2
        InstanceType: t2.micro
        KeyName: firstkey
        SecurityGroupIds:
          - !Ref PrjSecGrp
        UserData: 
          Fn::Base64:
             !Sub 
             - |
                  #!/bin/bash
                  dnf update -y 
                  dnf install python3 -y 
                  pip3 install Flask
                  pip3 install Flask_MySql
                  echo "${MyDBURI}" >> dbserver.endpoint
                  # https://raw.githubusercontent.com/fhalearslnn/phonebook-application/main/phonebook-app.py
                  # Add github Toekn
                  TOKEN = "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"
                  FOLDER = https://$TOKEN@github.com/fhalearslnn/phonebook-application/main/
                  # FOLDER = https://raw.githubusercontent.com/fhalearslnn/phonebook-application/main/
                  curl -s --create-dirs -o "/home/ec2-user/templates/index.html" -L "$FOLDER"templates/index.html
                  curl -s --create-dirs -o "/home/ec2-user/templates/add-update.html" -L "$FOLDER"templates/add-update.html
                  curl -s --create-dirs -o "/home/ec2-user/templates/delete.html" -L "$FOLDER"templates/delete.html
                  curl -s --create-dirs -o "/home/ec2-user/phonebook-app.py" -L "$FOLDER"phonebook-app.py
                  python3 /home/ec2-user/phonebook-app.py
                # wget https://raw.githubusercontent.com/fhalearslnn/phonebook-application/main/templates/add-update.html
                # wget https://raw.githubusercontent.com/fhalearslnn/phonebook-application/main/templates/delete.html
                # wget https://raw.githubusercontent.com/fhalearslnn/phonebook-application/main/templates/index.html
                # echo "${myRDSDatabase.Endpoint.Address}" >> dbserver.endpoint
                - MyDBURI: !GetAtt PrjDBInstance.Endpoint.Address


      LaunchTemplateName: PrjLT
      TagSpecifications:
        - ResourceType: instance
          Tags: 
            - Key: Name
              Value: !Sub Web Server of ${AWS::StackName} Stack
 

  PrjTG:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      Port: 80
      Protocol: HTTP
      TargetType: instance
      UnhealthyThresholdCount: 3
      HealthyThresholdCount: 2
      VpcId: !Ref MyVPc

  PrjASG:
    Type: AWS::AutoScaling::AutoScalingGroup
    Properties:
      AutoScalingGroupName: PrjASG
      AvailabilityZones: !GetAZs ""
      DesiredCapacity: 2
      HealthCheckGracePeriod: 300
      HealthCheckType: ELB
      LaunchTemplate:
        LaunchTemplateId: !Ref PrjLT
        Version: !GetAtt PrjLT.LatestVersionNumber
      MaxInstanceLifetime: Number
      MaxSize: 3 # Required
      MinSize: 1 # Required
      TargetGroupARNs: 
        - !GetAtt PrjTG.TargetGroupARN
  

  PrjALB:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      IpAddressType: ipv4
      Scheme: internet-facing
      SecurityGroups: 
        - !GetAtt PrjALBSecGrp.GroupId
      Subnets: !Ref MySubnets
      Type: application    

  PrjListener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      DefaultActions: # Required
        - TargetGroupArn: !Ref PrjTG
          Type: forward
      LoadBalancerArn: !Ref PrjALB # Required
      Port: 80
      Protocol: HTTP 

  PrjDBInstance:
    Type: AWS::RDS::DBInstance
    Properties:
      AllocatedStorage: 20
      AllowMajorVersionUpgrade: false
      AutoMinorVersionUpgrade: false
      AvailabilityZone: "String"
      DBInstanceClass: db.t2.micro
      DBName: prj_phonebook
      DBSecurityGroups: 
        DBSecurityGroups
      DeleteAutomatedBackups: false
      DeletionProtection: false
      EngineVersion: 8.0.28
      MasterUserPassword: Phone_book_78
      MasterUsername: admin
      MaxAllocatedStorage: Number
      MultiAZ: false
      Port: 3306
      PubliclyAccessible: true
      VPCSecurityGroups: 
        - !GetAtt PrjSecGrp.GroupId        

  
Outputs:
  PrjURL:
    Description: 
    Value: !Join 
      - ""
      - - "http://"
      - !GetAtt PrjALB.DNSName
